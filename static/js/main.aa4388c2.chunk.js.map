{"version":3,"sources":["App.js","index.js"],"names":["App","props","openFileBrowser","InputFiles","current","click","renderFile","fileObj","ExcelRenderer","err","resp","console","log","setState","dataLoaded","cols","rows","state","isOpen","isFormInvalid","errs","fileuploder","bind","toggle","React","createRef","e","target","files","length","fileName","name","slice","lastIndexOf","this","uploadedFileName","alert","className","type","onChange","ref","data","columns","tableClassName","Component","ReactDOM","render","document","getElementById"],"mappings":"iSA+FeA,E,YAzFb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KA6CRC,gBAAkB,WAChB,EAAKC,WAAWC,QAAQC,SA/CR,EAmDlBC,WAAa,SAACC,GAEVC,wBAAcD,EAAS,SAACE,EAAKC,GACxBD,EACDE,QAAQC,IAAIH,GAGZ,EAAKI,SAAS,CACZC,YAAY,EACZC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,UA3DnB,EAAKC,MAAM,CACTC,QAAQ,EACRJ,YAAY,EACZK,eAAe,EACfH,KAAM,KACND,KAAM,KACNK,KAAM,IAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKpB,gBAAkB,EAAKA,gBAAgBoB,KAArB,gBACvB,EAAKhB,WAAa,EAAKA,WAAWgB,KAAhB,gBAClB,EAAKnB,WAAaqB,IAAMC,YAdR,E,yEAiBNC,GACV,GAAGA,EAAEC,OAAOC,MAAMC,OAAO,CACvB,IAAItB,EAAUmB,EAAEC,OAAOC,MAAM,GACzBE,EAAWvB,EAAQwB,KAC6B,SAAhDD,EAASE,MAAMF,EAASG,YAAY,KAAK,IAC3CC,KAAKrB,SAAS,CACZsB,iBAAkB,8BAAOL,GACzBX,eAAe,EACfC,KAAM,KAENgB,MAAM,4BACRF,KAAK5B,WAAWC,IAGhB2B,KAAKrB,SAAS,CACZO,KAAM,iEACNe,iBAAkB,Q,+BAQxBD,KAAKrB,SAAS,CACZK,QAASgB,KAAKjB,MAAMC,W,+BA6BtB,OACE,yBAAKmB,UAAU,eACf,8DACI,yBAAKA,UAAU,gBAAf,IAA+B,2BAAOC,KAAK,OAAOC,SAAUL,KAAKb,YAAamB,IAAKN,KAAK/B,cAExF,yBAAKkC,UAAU,YAAYH,KAAKjB,MAAMkB,iBAAtC,KACA,yBAAKE,UAAU,UAAUH,KAAKjB,MAAMG,KAApC,KAEA,yBAAKiB,UAAU,eACXH,KAAKjB,MAAMH,YAAc,kBAAC,WAAD,CAAU2B,KAAMP,KAAKjB,MAAMD,KAAM0B,QAASR,KAAKjB,MAAMF,KAAM4B,eAAe,mB,GAjF/FC,aCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aa4388c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null,\n      errs: ''\n    }\n    this.fileuploder = this.fileuploder.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.InputFiles = React.createRef();\n  }\n\n  fileuploder(e){    \n    if(e.target.files.length){\n      let fileObj = e.target.files[0];\n      let fileName = fileObj.name;\n       if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        this.setState({\n          uploadedFileName: <span>{fileName}</span>,\n          isFormInvalid: false,\n          errs: ''\n          });\n          alert('File Upload Successfully')\n        this.renderFile(fileObj)\n      }    \n      else{\n        this.setState({\n          errs: <span>Please Upload .xsls File Format</span>,\n          uploadedFileName: \"\"\n        })\n      }\n    }               \n  }\n\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  openFileBrowser = () => {\n    this.InputFiles.current.click();\n  }\n\n\n  renderFile = (fileObj) => {\n      //just pass the fileObj as parameter\n      ExcelRenderer(fileObj, (err, resp) => {\n        if(err){\n          console.log(err);            \n        }\n        else{\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      }); \n  }\n\n \n\n \n  render() {\n    return (\n      <div className=\"MainContent\">\n      <h2>Upload excel File and get data</h2>\n          <div className=\"inputWidgets\"> <input type=\"file\" onChange={this.fileuploder} ref={this.InputFiles} />\n          </div>\n          <div className=\"Filename\">{this.state.uploadedFileName} </div>   \n          <div className=\"Errors\">{this.state.errs} </div>\n\n          <div className=\"DisplayData\">\n             {this.state.dataLoaded && <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"xslxData\" /> }\n           \n          </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}